{
    "openapi": "3.0.0",

    "info": {
        "title": "API Barbearia",
        "description": "Uma api onde é possível cadastrar clientes e salvar seus cortes de cabelos para um sistema de fidelidade",
        "version": "1.0.0",
        "contact": {
            "email": "heriksantos04@gmail.com"
        }

    },

    "paths": {
        "/clients": {
            "post": {
                "tags": ["Clients"],
                "summary": "Create a new client",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Client"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Client already exists"
                    },
                    "401": {
                        "description": "Token is required"
                    }

                },
                "security": [{
                    "JWT_Bearer": []
                }]
            },
            "get": {
                "tags": ["Clients"],
                "summary": "Return a list of clients",
                "responses": {
                    "200": {
                        "description": "Return an array that contain all clients",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "data_nasc": {
                                                "type": "string"
                                            },
                                            "qtd_cortes": {
                                                "type": "number",
                                            "default": 2
                                            },
                                            "createdAt": {
                                                "type": "string"
                                            },
                                            "updateAt": {
                                                "type": "string"
                                            }

                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token is required"
                    }
                },
                "security": [{
                    "JWT_Bearer": []
                }]
            }

        },
        "/clients/{clientId}": {
            "put": {
                "tags": ["Clients"],
                "summary": "Update a client",
                "description": "Update a client that passed with params",
                "responses": {
                    "200": {
                        "description": "Return a edited client",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Client not found"
                    }
                },
                "parameters": [ {
                    "name": "id",
                    "in": "path",
                    "description": "ID of client to update ",
                    "required": true
                }],
                "security": [{
                    "JWT_Bearer": []
                }]
            },
            "delete": {
                "tags": ["Clients"],
                "summary": "Delete a client",
                "description": "Delete a client that passed with params",
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Client not found"
                    }
                },
                "parameters": [ {
                    "name": "id",
                    "in": "path",
                    "description": "ID of client to delete ",
                    "required": true
                }],
                "security": [{
                    "JWT_Bearer": []
                }]
            }
        },
        "/clients/login": {
            "post": {
                "tags": ["Clients"],
                "summary": "Login client",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "data_nasc": {
                                        "type": "string"
                                    }
                                },
                                "example": {
                                    "name": "Herik Santos",
                                    "data_nasc": "2001-04-26"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Username is incorrect"
                    }
                }
            }
        },
        "/admin": {
            "post": {
                "tags": ["Admin"],
                "summary": "Create a new admin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Admin"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Email is not valid"
                    }
                }
            },
            "get": {
                "tags": ["Admin"],
                "summary": "Return list of  admins",
                "responses": {
                    "200": {
                        "description": "Return an array that contain all admins",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "createdAt": {
                                                "type": "string"
                                            },
                                            "updateAt": {
                                                "type": "string"
                                            }

                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token is required"
                    }
            },
            "security": [{
                "JWT_Bearer": []
            }]
        }
    },
    "/admin/{adminId}": {
        "put": {
            "tags": ["Admin"],
            "summary": "Update a admin",
            "description": "Update a admin that passed with params",
            "responses": {
                "200": {
                    "description": "Return a edited admin",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Admin"
                            }
                        }
                    }
                },
                "400": {
                    "description": "admin not found"
                }
            },
            "parameters": [ {
                "name": "id",
                "in": "path",
                "description": "ID of admin to update ",
                "required": true
            }],
            "security": [{
                "JWT_Bearer": []
            }]
        },
        "delete": {
            "tags": ["Admin"],
            "summary": "Delete a admin",
            "description": "Delete a admin that passed with params",
            "responses": {
                "200": {
                    "description": "Ok"
                },
                "400": {
                    "description": "admin not found"
                }
            },
            "parameters": [ {
                "name": "id",
                "in": "path",
                "description": "ID of admin to delete ",
                "required": true
            }],
            "security": [{
                "JWT_Bearer": []
            }]
        }
    },
    "/admin/login": {
        "post": {
            "tags": ["Admin"],
            "summary": "Login admin",
            "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "email": "heriksantos04@gmail.com",
                                "password": "anypassword"
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Return a edited admin",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "string"
                                    },
                                    "token": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "Password or email is not valid"
                }
            }
        }
    },
    "/token": {
        "post": {
            "tags": ["Token"],
            "summary": "Verify token",
            "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxMjMsImV4cCI6MTY1Njk2Nzg4Mn0.rJL2P0K1B1Fq-d4iK-N9cXW9A_bP9K_j3ZQomUlzVhs"
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "boolean"
                }
            }
        }
    }
    },
    "components": {
        "schemas": {
            "Client": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "data_nasc": {
                        "type": "string"
                    },
                    "qtd_cortes": {
                        "type": "number",
                    "default": 2
                    }
                },
                "example": {
                    "name": "Herik Santos",
                    "data_nasc": "2001-04-26",
                    "qtd_cortes": 2
                }

            },
            "Admin": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "example": {
                    "name": "Herik Santos",
                    "email": "heriksantos04@gmail.com",
                    "password": "anypassword"
                }
            }
        },
        "securitySchemes": {
            "JWT_Bearer": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }

    }
}
